package jcsgomain;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.InputStreamReader;
import jcsgomain.logic;

/**
 *
 * @author martin
 */
public class jCSGO extends javax.swing.JFrame {

    /**
     * Creates new form jCSGO
     */
    public jCSGO() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtDefaultFolder = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtInfo = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jMenuBar = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuFileExit = new javax.swing.JMenuItem();
        menuServer = new javax.swing.JMenu();
        menuServerDetails = new javax.swing.JMenuItem();
        menuServerServerconfig = new javax.swing.JMenuItem();
        menuServerMaplist = new javax.swing.JMenuItem();
        menuServerMapcycle = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Default server folder:");

        txtDefaultFolder.setText("/home/steam/LinuxGSM-master");
        txtDefaultFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDefaultFolderActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Noto Sans", 1, 24)); // NOI18N
        jLabel2.setText("jCSGO");

        jButton1.setFont(new java.awt.Font("Noto Mono", 0, 36)); // NOI18N
        jButton1.setText("ENGAGE!!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtInfo.setColumns(20);
        txtInfo.setLineWrap(true);
        txtInfo.setRows(5);
        txtInfo.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtInfo);

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        menuFile.setText("File");

        menuFileExit.setText("Exit");
        menuFileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileExitActionPerformed(evt);
            }
        });
        menuFile.add(menuFileExit);

        jMenuBar.add(menuFile);

        menuServer.setText("Server");

        menuServerDetails.setText("Details");
        menuServerDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuServerDetailsActionPerformed(evt);
            }
        });
        menuServer.add(menuServerDetails);

        menuServerServerconfig.setText("Server config");
        menuServerServerconfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuServerServerconfigActionPerformed(evt);
            }
        });
        menuServer.add(menuServerServerconfig);

        menuServerMaplist.setText("Maplist");
        menuServerMaplist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuServerMaplistActionPerformed(evt);
            }
        });
        menuServer.add(menuServerMaplist);

        menuServerMapcycle.setText("Mapcycle");
        menuServerMapcycle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuServerMapcycleActionPerformed(evt);
            }
        });
        menuServer.add(menuServerMapcycle);

        jMenuBar.add(menuServer);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtDefaultFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton1))
                                    .addComponent(jLabel1))
                                .addGap(252, 570, Short.MAX_VALUE)))))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDefaultFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(92, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDefaultFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDefaultFolderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDefaultFolderActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        process("/home/steam/LinuxGSM-master/csgoserver restart");
        process("/home/steam/LinuxGSM-master/startcsgo.sh");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void menuServerDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuServerDetailsActionPerformed
        process("/home/steam/LinuxGSM-master/csgoserver details");
    }//GEN-LAST:event_menuServerDetailsActionPerformed

    private void menuFileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menuFileExitActionPerformed

    private void menuServerServerconfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuServerServerconfigActionPerformed
        processFile("/home/steam/LinuxGSM-master/serverfiles/csgo/cfg/csgoserver.cfg");
    }//GEN-LAST:event_menuServerServerconfigActionPerformed

    private void menuServerMaplistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuServerMaplistActionPerformed
        processFile("/home/steam/LinuxGSM-master/serverfiles/csgo/maplist.txt");
    }//GEN-LAST:event_menuServerMaplistActionPerformed

    private void menuServerMapcycleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuServerMapcycleActionPerformed
        processFile("/home/steam/LinuxGSM-master/serverfiles/csgo/mapcycle.txt");
    }//GEN-LAST:event_menuServerMapcycleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jCSGO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jCSGO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jCSGO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jCSGO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jCSGO().setVisible(true);
            }
        });
    }

    private void process(String command) {
        String s;
        Process p;
        BufferedReader br = null;
        try {
            txtInfo.append(command + "\n");
            p = Runtime.getRuntime().exec(command);
            br = new BufferedReader(
                    new InputStreamReader(p.getInputStream()));

            while ((s = br.readLine()) != null) {
//                System.out.println("line: " + s);
                txtInfo.append(s + "\n");
            }
            p.waitFor();
            txtInfo.append("exit: " + p.exitValue() + "\n");
            p.destroy();
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    private void processFile(String file) {
        String s;
        Process p;
        File f;
        BufferedReader br = null;
        try {
            txtInfo.append("Reading file: " + file + "\n");
            f = new File(file);
            br = new BufferedReader(new FileReader(f));

            while ((s = br.readLine()) != null) {
//                System.out.println("line: " + s);
                txtInfo.append(s + "\n");
                txtInfo.updateUI();
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenuItem menuFileExit;
    private javax.swing.JMenu menuServer;
    private javax.swing.JMenuItem menuServerDetails;
    private javax.swing.JMenuItem menuServerMapcycle;
    private javax.swing.JMenuItem menuServerMaplist;
    private javax.swing.JMenuItem menuServerServerconfig;
    private javax.swing.JTextField txtDefaultFolder;
    private javax.swing.JTextArea txtInfo;
    // End of variables declaration//GEN-END:variables
}
